extends layout


block content
    script.
        interact('.dragging_element')
                .draggable({
                    // enable inertial throwing
                    inertia: false,
                    // keep the element within the area of it's parent
                    restrict: {
                        restriction: "parent",
                        endOnly: true,
                        elementRect: {top: 0, left: 0, bottom: 0, right: 0}
                    },
                    // enable autoScroll
                    autoScroll: true,

                    // call this function on every dragmove event
                    onmove: dragMoveListener,
                    // call this function on every dragend event
                    onend: function (event) {
                        var textEl = event.target.querySelector('p');

                        textEl && (textEl.textContent =
                                'moved a distance of '
                                + (Math.sqrt(event.dx * event.dx +
                                        event.dy * event.dy) | 0) + 'px');
                    }
                });

        function dragMoveListener(event) {
            var target = event.target,
            // keep the dragged position in the data-x/data-y attributes
                    x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx,
                    y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;

            // translate the element
            target.style.webkitTransform =
                    target.style.transform =
                            'translate(' + x + 'px, ' + y + 'px)';

            // update the posiion attributes
            target.setAttribute('data-x', x);
            target.setAttribute('data-y', y);
        }

        // this is used later in the resizing and gesture demos
        window.dragMoveListener = dragMoveListener;


        $(document).on('click', '#add_text', function () {
            console.log("Adding Text");
            $('#droptarget').append('<p class="dragging_element">' + $('#text_input').val() + '</p>');
        });

        $(document).on('mouseenter', 'p.dragging_element, ul.dragging_element', function () {
            $(this).css('border-style', 'solid');
        });

        $(document).on('mouseleave', 'p.dragging_element, ul.dragging_element', function(){
            $(this).css('border-style', 'none');
        });

        $(document).on('click','#add_bullet', function () {
            console.log("Adding bullet point");
            $('#droptarget').append('<ul class="dragging_element"><li>'+ $('#bullet_input').val() +'</li></ul>');
        });


    .container-fluid
        .row
            .col-lg-12
                h1.text-center PSS: Plus Sized Slides
        .row
            .col-lg-12
                #droptarget(style="height: 40em;")
                    //texts = slide_text
                   //each text in texts
                   span #{slide_text}
                   //each image in slide_image
                       //.img-responsive
        .row
            .col-lg-12
                #draggable

        .row
            .col-lg-2.margin-offset-left
                #new.button.btn.btn-primary.btn-lg(type="button") New
            .col-lg-2
                #delete.button.btn.btn-danger.btn-lg(type="button") Delete
            .col-lg-2
                .button.btn.btn-primary.btn-lg(data-toggle="modal", data-target="#add_text_modal") Add Text
            .col-lg-2
                #add_b_text.button.btn.btn-primary.btn-lg(data-toggle="modal", data-target="#add_bullet_modal") Add Bulleted Text
            .col-lg-2
                #save_slide.button.btn.btn-primary.btn-lg(type="button") Save Slide



    .modal.fade(tabindex="-1" role="dialog" id="add_text_modal")
        .modal-dialog
            .modal-content
                .modal-header

                    button.close(type="button",data-dismiss="modal", aria-label="Close")
                    h4.modal-title Add Text

                .modal-body
                    input(type="text", name="text_input", id="text_input")

                 .modal-footer
                     button.btn.btn-default(type="button", data-dismiss="modal") Close
                     button.btn.btn-primary(type="button", data-dismiss="modal", id="add_text") Save

    .modal.fade(tabindex="-1" role="dialog" id="add_bullet_modal")
        .modal-dialog
            .modal-content
                .modal-header

                    button.close(type="button",data-dismiss="modal", aria-label="Close")
                    h4.modal-title Add Bullet point

                .modal-body
                    input(type="text", name="text_input", id="bullet_input")

                .modal-footer
                    button.btn.btn-default(type="button", data-dismiss="modal") Close
                    button.btn.btn-primary(type="button", data-dismiss="modal", id="add_bullet") Save
